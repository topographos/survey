---
title: "data prep - aoristic"
author: "Michal Michalski"
format: 
  html:
    code-fold: true
    toc: true
    code-overflow: wrap
editor: visual
execute: 
  warning: false
---

# Method

describe in context of Aoristic Analysis

# Processing

Packages

```{r}
library(sf)
library(knitr)
library(tidyverse)
library(kairos)

# extarnal custom function
source("../func/round_any.R")
```

## Input

Read survey data and select survey by code

```{r}

# read shapefile
n_mes_sites_raw = st_read("../data/raw/north_mesopotamia_sites.shp", quiet = TRUE) %>% 
  janitor::clean_names()

# add column with survey code
n_mes_sites_raw = n_mes_sites_raw %>% 
  mutate(
   code = str_extract(id, "[^_]+")
  )

# select sites from one survey to analyse
sites_tbs= n_mes_sites_raw %>% filter(code == "TBS")

# look at the data
knitr::kable(head(sites_tbs))

```

Do integrity checks - compare number of sites after rounding time blocks to 50 years.

```{r}
# set geometry to null
sites_tbs = st_drop_geometry(sites_tbs)

# check periods 
summary_periods = sites_tbs %>% 
  group_by(start_date, end_date) %>% 
  count()

# sum
sum(summary_periods$n)

# create column for aoristic analysis
# round the periods
sites_tbs = sites_tbs %>% 
  mutate(
    from =round_any(start_date, 50),
    to = round_any(end_date, 50)
  )

# check periods rounded 
summary_periods_rounded = sites_njs %>% 
  group_by(from, to) %>% 
  count()

# bind two df with periods
periods = cbind(summary_periods, summary_periods_rounded)

# look at the data
knitr::kable(periods)

```

Apply aoristic analysis

```{r}

# create aoristic sum ----
aorist_sum = aoristic(sites_tbs, start = -3200, stop = 700,step = 50, weight = TRUE)

# extract sum for each time step as a vector - to be ploted on y axis
y = as.vector(aorist_sum)

# create column with mid point of the time step

# 1 - get dates from aoristic object
blocks = get_dates(aorist_sum)

# 2 - get mid point across rows to be ploted on x axis
x = rowMeans(blocks)

# create a data frame
aorist_sum_df = tibble(x,y)

# extract weights ----
array_p = aorist_sum@p

p_df = as.data.frame(array_p[,,1])

# combine into wide table
aorist_wide_df = cbind(sites_tbs,p_df)

# pivot into a longer table
aorist_long_df = aorist_wide_df %>% 
  pivot_longer(
    cols = `-3200_-3150`:`650_700`,
    names_to = "time",
    values_to = "prob"
  ) %>% 
  filter(prob > 0) %>% 
  separate(col= time, 
           into=c('time_start', 'time_end'), 
           sep='_',
           remove = FALSE) %>% 
  mutate(
    time = str_replace(time, "_", " to ")
  ) %>% 
  mutate(
    time_start = as.numeric(time_start),
    time_end = as.numeric((time_end))
  )


```

## Output

TABLE - WIDE

```{r}
knitr::kable(head(aorist_wide_df))

```

TABLE - LONG

```{r}
knitr::kable(head(aorist_long_df))
```

Save the files

```{r}
#| eval: false
# save to rds format
saveRDS(aorist_wide_df,"../data/tab/tbs_sites_WIDE.rds")

saveRDS(aorist_long_df,"../data/tab/tbs_sites_LONG.rds")
```

Spatial Feature

```{r}

# read long data 
sites = readRDS("../data/tab/tbs_sites_LONG.rds")

# provide the EPSG code using st_crs()
crs_wgs84 = st_crs(4326) # WGS84 has EPSG code 4326

sites_sf = st_as_sf(sites, coords = c("longitude", "latitude"))

st_crs(sites_sf) = crs_wgs84

# provide the EPSG code using st_crs() - https://epsg.io/32637

UTM_Zone_37N = st_crs(32637) # IGRS_UTM_Zone_38N EPSG: 3891

# transform sites from 

sites_sf = st_transform(sites_sf, UTM_Zone_37N)

plot(sites_sf$geometry)
```

Save files

```{r}
#| eval: false
saveRDS(sites_sf,"../data/tab/tbs_sites_LONG_SF.rds")

```

# References
